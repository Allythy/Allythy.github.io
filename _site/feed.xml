<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-07-03T14:12:37-03:00</updated><id>http://localhost:4000/</id><title type="html">Allythy</title><subtitle>Dicas sobre o Debian, Software Livre, linha de comando</subtitle><entry><title type="html">Automatizando a geração de senhas seguras no GNU/Linux</title><link href="http://localhost:4000/Automatizando-a-gera%C3%A7%C3%A3o-de-senhas-seguras-no-gnu-linux" rel="alternate" type="text/html" title="Automatizando a geração de senhas seguras no GNU/Linux" /><published>2017-07-03T11:00:00-03:00</published><updated>2017-07-03T11:00:00-03:00</updated><id>http://localhost:4000/Automatizando-a-gera%C3%A7%C3%A3o-de-senhas-seguras-no-gnu-linux</id><content type="html" xml:base="http://localhost:4000/Automatizando-a-gera%C3%A7%C3%A3o-de-senhas-seguras-no-gnu-linux">&lt;p&gt;Neste artigo, vamos aprender a automatizar a geração de senhas seguras no GNU/Linux. Vamos deixar a criação de senha algo mais prático e rápido, porque se você precisar fazer algo mais do que 3 vezes, crie um Shell Script.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gerando senha com caracteres alfanuméricos&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat /dev/urandom | tr -dc &lt;span class=&quot;s1&quot;&gt;'a-zA-Z0-9'&lt;/span&gt; | fold -w 20 | head -n1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;No comando acima, utilizo a saída do &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/urandom&lt;/code&gt; que gera números aleatórios e mando para o &lt;code class=&quot;highlighter-rouge&quot;&gt;tr&lt;/code&gt; que vai deletar todos os caracteres exceto aqueles que estão entre as aspas simples, o &lt;code class=&quot;highlighter-rouge&quot;&gt;fold&lt;/code&gt; vai quebrar a linha a cada 20 caracteres. Em seguida, temos o &lt;code class=&quot;highlighter-rouge&quot;&gt;head&lt;/code&gt; que pegar apenas a primeira linha&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gerando senha com caracteres especiais&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat /dev/urandom | tr -dc &lt;span class=&quot;s1&quot;&gt;'a-zA-Z0-9-_!@#$%&amp;amp;*+?'&lt;/span&gt; | fold -w 20 | head -n1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Script para geração da senha&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Agora vamos a um exemplo de script que pode ser utilizado para gerar senhas. O script vai perguntar quantas senhas o usuário vai querer e a quantidade de caracteres que a senha vai ter.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; -p &lt;span class=&quot;s2&quot;&gt;&quot;Informe a quantidade de senhas: &quot;&lt;/span&gt; qtdSenha
&lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; -p &lt;span class=&quot;s2&quot;&gt;&quot;Informe a quantidade de caracteres da senha: &quot;&lt;/span&gt; cart
&lt;span class=&quot;nb&quot;&gt;echo

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;seq 1 &lt;span class=&quot;nv&quot;&gt;$qtdSenha&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;;&lt;span class=&quot;k&quot;&gt;do
 &lt;/span&gt;cat /dev/urandom | tr -dc &lt;span class=&quot;s1&quot;&gt;'a-zA-Z0-9-_!@#$%&amp;amp;*+'&lt;/span&gt; | fold -w &lt;span class=&quot;nv&quot;&gt;$cart&lt;/span&gt; | head -n1 | tr A-Za-z N-ZA-Mn-za-m
&lt;span class=&quot;k&quot;&gt;done
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://sempreupdate.com.br/2016/06/automatizando-geracao-de-senhas-seguras.html&quot; target=&quot;_ blank&quot;&gt;Fonte&lt;/a&gt;&lt;/p&gt;</content><author><name>Allythy</name></author><summary type="html">Neste artigo, vamos aprender a automatizar a geração de senhas seguras no GNU/Linux. Vamos deixar a criação de senha algo mais prático e rápido, porque se você precisar fazer algo mais do que 3 vezes, crie um Shell Script.</summary></entry><entry><title type="html">Como configurar uma variável no $PATH do GNU/Linux</title><link href="http://localhost:4000/Como-configurar-uma-vari%C3%A1vel-no-PATH-do-gnu-linux.md" rel="alternate" type="text/html" title="Como configurar uma variável no $PATH do GNU/Linux" /><published>2017-07-01T13:00:00-03:00</published><updated>2017-07-01T13:00:00-03:00</updated><id>http://localhost:4000/Como-configurar-uma-vari%C3%A1vel-no-PATH-do-gnu-linux.md</id><content type="html" xml:base="http://localhost:4000/Como-configurar-uma-vari%C3%A1vel-no-PATH-do-gnu-linux.md">&lt;p&gt;Neste artigo, vamos aprender como configurar uma variável no $PATH do GNU/Linux. Quando você digita um comando no seu Shell o que você está dizendo é pra ele executar um programa. Mesmos comandos simples, como &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; , &lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt; , &lt;code class=&quot;highlighter-rouge&quot;&gt;mkdir&lt;/code&gt; , &lt;code class=&quot;highlighter-rouge&quot;&gt;rm&lt;/code&gt; e outros, são apenas pequenos programas que geralmente ficam dentro de um diretório no seu computador chamado &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/bin&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Existem outros lugares em seu sistema que geralmente possuem programas executáveis ​​também, os mais comuns são:  &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/ bin, /usr/local/sbin e /usr/sbin&lt;/code&gt;. Onde os programas ficam e por que, estão fora do escopo deste artigo, mas um programa executável pode ficar praticamente em qualquer lugar do seu sistema ele não precisa se limitar a um desses diretórios.&lt;/p&gt;

&lt;p&gt;Quando você digita um comando no seu Shell, ele não vai procurar em todos os diretórios para ver se tem um programa com esse nome, mas apenas em diretórios específicos. Como eu sei qual é esses diretórios ? É simples, eles fazem parte de uma variável de ambiente, chamada &lt;code class=&quot;highlighter-rouge&quot;&gt;$PATH&lt;/code&gt;, onde o seu Shell faz uma verificação para saber onde procurar. Para ver o que está no seu &lt;code class=&quot;highlighter-rouge&quot;&gt;$PATH&lt;/code&gt;, digite:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Você provavelmente verá os diretórios mencionados acima, bem como alguns outros e todos são separados por dois pontos.&lt;/p&gt;

&lt;p&gt;Às vezes, você precisa instalar algum programa que está em outro local do seu sistema, mas não que dizer o seu caminho completo. Você pode fazer isso facilmente adicionando um diretório a sua variável ambiente &lt;code class=&quot;highlighter-rouge&quot;&gt;$PATH&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Digamos que você escreveu um pequeno Shell Script chamado &lt;strong&gt;hello.sh&lt;/strong&gt; e ele está localizado em um diretório chamado &lt;strong&gt;shell&lt;/strong&gt; que tem esse caminho &lt;strong&gt;/home/allythy/Documentos/shell&lt;/strong&gt;. Este script fornece alguma função útil e você gostaria de executar ele independentemente do diretório em que você estivesse. Para isso, basta adicionar o caminho do seu arquivo para a variável de ambiente &lt;code class=&quot;highlighter-rouge&quot;&gt;$PATH&lt;/code&gt; com o seguinte comando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:/home/allythy/Documentos/shell
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Agora você pode executar o seu script em qualquer lugar do seu sistema apenas digitando seu nome(hello.sh), sem ter que incluir o caminho completo dele.&lt;/p&gt;

&lt;p&gt;Mas o que acontece se você reiniciar seu computador ou abri um terminal ? Sua adição do caminho a variável de ambiente &lt;code class=&quot;highlighter-rouge&quot;&gt;$PATH&lt;/code&gt; desapareceu. A variável &lt;code class=&quot;highlighter-rouge&quot;&gt;$PATH&lt;/code&gt; é definida pelo seu Shell toda vez que você abri um novo terminal, mas você pode configurá-lo para que ele sempre inclua seu novo caminho a cada novo Shell que você vai abrir.&lt;/p&gt;

&lt;p&gt;Você pode configurar para todos os usuários do sistema colocando o comando acima &lt;code class=&quot;highlighter-rouge&quot;&gt;export PATH=$PATH:/home/allythy/Documentos/shell&lt;/code&gt; no final de algum desses arquivos:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/etc/profile /
/etc/profile.d/   
/etc/bash.bashrc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ou para um usuário específico colocando o comando acima nesses arquivos:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~/.bashrc
~/.profile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Vou dá um exemplo colocando o caminho do nosso script no arquivo &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bashrc&lt;/code&gt;. Primeiro, vamos abri o arquivo com algum editor de texto.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Feito isso, vamos colocar o esse comando &lt;code class=&quot;highlighter-rouge&quot;&gt;export PATH=$PATH:/home/allythy/Documentos/shell&lt;/code&gt; no final do arquivo e depois salvar. O seu arquivo deve ficar assim.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;img/vim-bashrc.png&quot; alt=&quot;arquivo ~/.bashrc aperto com o vim&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pronto agora você pode acessar o seu script em qualquer parte do seu sistema.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://opensource.com/article/17/6/set-path-linux&quot; target=&quot;_ blank&quot;&gt;Fonte&lt;/a&gt;&lt;/p&gt;</content><author><name>Allythy</name></author><summary type="html">Neste artigo, vamos aprender como configurar uma variável no $PATH do GNU/Linux. Quando você digita um comando no seu Shell o que você está dizendo é pra ele executar um programa. Mesmos comandos simples, como ls , cd , mkdir , rm e outros, são apenas pequenos programas que geralmente ficam dentro de um diretório no seu computador chamado /usr/bin.</summary></entry><entry><title type="html">Como baixar playlist do Youtube usando o youtube-dl</title><link href="http://localhost:4000/Como-baixar-playlist-do-Youtube-usando-o-youtube-dl" rel="alternate" type="text/html" title="Como baixar playlist do Youtube usando o youtube-dl" /><published>2017-06-30T13:00:00-03:00</published><updated>2017-06-30T13:00:00-03:00</updated><id>http://localhost:4000/Como-baixar-playlist-do-Youtube-usando-o-youtube-dl</id><content type="html" xml:base="http://localhost:4000/Como-baixar-playlist-do-Youtube-usando-o-youtube-dl">&lt;p&gt;Esta vai ser uma dica bem rápida, mas muito útil de como baixar playlist do Youtube usando o youtube-dl. Para quem ainda não conhece o youtube-dl é um pequeno programa de linha de comando para baixar vídeos e áudio do YouTube e outros sites, o programa é escrito em python.&lt;/p&gt;

&lt;p&gt;Caso você não tenha o programa instalado, use esse comando para instalar o Debian e derivados:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt install youtube-dl
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Feito isso, vamos pegar o link da playlist do canal do YouTube do SempreUpdate como exemplo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;img/sempreupdate.png&quot; alt=&quot;playlist do canal do youtube do SempreUpdate&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Com o link em mãos, use esse comando para baixar a playlist&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;youtude-dl -cit coloque-aqui-o-link-da-playlist
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-c&lt;/code&gt; Continua do download da onde parou, caso você tenha cancelado ( Ctrl+C)&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-i&lt;/code&gt; Continuar caso tenha algum erros de download, por exemplo, para ignorar vídeos indisponíveis em uma playlist&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-t&lt;/code&gt; Usa o título do nome do vídeo&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Legal, mas eu não quero baixar todos os vídeos só quero do vídeo 5 até o 9, então você usa esse comando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;youtube-dl --playlist-start 5 --playlist-end 9 link-da-playlist
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--playlist-start&lt;/code&gt; Vídeo da playlist que vai começar.&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--playlist-end&lt;/code&gt; Vídeo da playlist que vai parar.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Interessante, mas eu quero baixar apenas os vídeos 4, 6 e 15. Então, você tem que usar esse comando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;youtube-dl -cit --playlist-items 4,6,15 link-da-playlist
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--playlist-items&lt;/code&gt; Faz o download de vídeos específicos de uma playlist. Para isso, você tem que especificar o índices dos vídeos na playlist separando-os por vírgulas.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Você pode também informar ao mesmo tempo os vídeos que gostaria de baixar na playlist e especificar o intervalo. Com esse comando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;youtube-dl -cit --playlist 4-7,8,10-13 link-da-playlist
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name>Allythy</name></author><summary type="html">Esta vai ser uma dica bem rápida, mas muito útil de como baixar playlist do Youtube usando o youtube-dl. Para quem ainda não conhece o youtube-dl é um pequeno programa de linha de comando para baixar vídeos e áudio do YouTube e outros sites, o programa é escrito em python.</summary></entry><entry><title type="html">Conheça três ferramentas de conversão de arquivos de linha de comando para GNU/Linux</title><link href="http://localhost:4000/Conheca-tres-ferramentas-de-conversao-de-arquivos-de-linha-comando" rel="alternate" type="text/html" title="Conheça três ferramentas de conversão de arquivos de linha de comando para GNU/Linux" /><published>2017-06-24T14:00:00-03:00</published><updated>2017-06-24T14:00:00-03:00</updated><id>http://localhost:4000/Conheca-tres-ferramentas-de-conversao-de-arquivos-de-linha-comando</id><content type="html" xml:base="http://localhost:4000/Conheca-tres-ferramentas-de-conversao-de-arquivos-de-linha-comando">&lt;p&gt;Neste artigo, vamos ver três ferramentas de conversão de arquivos de linha de comando para GNU/Linux.&lt;/p&gt;

&lt;h2 id=&quot;pandoc&quot;&gt;Pandoc&lt;/h2&gt;

&lt;p&gt;Pandoc é um ótimo utilitário para converter de uma linguagem de marcação para outra, além de fazer conversões rápidas e boas. Tem um arquivo formatado com Markdown que você deseja converter para um documento do LibreOffice Writer? Ou tem um documento LaTeX que você quer transformar em um EPUB? Ou talvez você tenha um arquivo HTML que deseja transformar em um slide deck. Pandoc está a altura de todas essas tarefas.&lt;/p&gt;

&lt;p&gt;Veja como usar Pandoc para uma conversão simples (neste caso, de HTML para reStructuredText). Para mais informações sobre essa ferramenta, leia a &lt;a href=&quot;http://pandoc.org/MANUAL.html#options&quot; target=&quot;_ blank&quot;&gt;documentação do Pandoc&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pandoc -t rst myfile.htlm -o myfile.rst
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;libreoffice&quot;&gt;LibreOffice&lt;/h2&gt;

&lt;p&gt;Você provavelmente está pensando: “Espere, o LibreOffice é uma aplicação gráfica”. Sim, mas o que muitas pessoas não sabem é que você pode executar LibreOffice a partir da linha de comando para converter rapidamente um ou mais arquivos. Por exemplo, transformar um conjunto de slides do LibreOffice Impress em PDF, digite o seguinte:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;soffice --headless --convert-to pdf SoftwareLivre.odp
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Você pode substituir a extensão &lt;code class=&quot;highlighter-rouge&quot;&gt;.pdf&lt;/code&gt; para qualquer formato de arquivo que você deseja converter. A opção &lt;code class=&quot;highlighter-rouge&quot;&gt;--headless&lt;/code&gt; permite usar o aplicativo sem a interface gráfica.&lt;/p&gt;

&lt;p&gt;Usar o LibreOffice na linha de comando para converter um único arquivo não é uma coisa interessante, pois você poderia fazer isso mais rápido usando a interface gráfica. No entanto, para converter vários arquivos ao mesmo tempo é uma ótima opção. Digamos que você queira converter todos os documentos do Microsoft Word para o formato do LibreOffice Writer, então digite o comando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;soffice --headless --convert-to odt &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.doc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;ffmpeg&quot;&gt;FFmpeg&lt;/h2&gt;

&lt;p&gt;Considerando que o Pandoc é o canivete suíço para conversão entre linguagens de marcação, o FFmpeg é o Pandoc para conversão de áudios e vídeos. O FFmpeg é um conjunto de bibliotecas e executáveis ​​que lhe dão a capacidade de converter seemlessly entre quase qualquer formato.&lt;/p&gt;

&lt;p&gt;Aqui está um exemplo de uma simples conversão de um vídeo em um formato AVI para Ogg Theora:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ffmpeg -i myvideo.avi myvideo.ogg
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;FFmpeg pode fazer muito mais do que isso. Você pode definir a taxa de quadros de um vídeo e adicionar legendas para ele, mudar a qualidade de áudio e muito mais.&lt;/p&gt;

&lt;p&gt;O FFmpeg tem muitas opões e é fácil esquecê-las, especialmente se você usar o FFmpeg de vez em quando. Então é sempre bom &lt;a href=&quot;https://ffmpeg.org/ffmpeg.html&quot; target=&quot;_ blank&quot;&gt;ler a documentação&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://opensource.com/life/16/10/3-file-conversion-tools-linux-command-line&quot; target=&quot;_ blank&quot;&gt;Fonte&lt;/a&gt;&lt;/p&gt;</content><author><name>Allythy</name></author><summary type="html">Neste artigo, vamos ver três ferramentas de conversão de arquivos de linha de comando para GNU/Linux.</summary></entry><entry><title type="html">Teclas de emergência do GNU/Linux</title><link href="http://localhost:4000/Teclas-de-emergencia-do-gnu-linux" rel="alternate" type="text/html" title="Teclas de emergência do GNU/Linux" /><published>2017-06-09T17:00:00-03:00</published><updated>2017-06-09T17:00:00-03:00</updated><id>http://localhost:4000/Teclas-de-emergencia-do-gnu-linux</id><content type="html" xml:base="http://localhost:4000/Teclas-de-emergencia-do-gnu-linux">&lt;p&gt;Neste artigo vamos aprender algumas teclas de emergência do GNU/Linux. Sabemos que os sistemas GNU/Linux não estão a salvo de travamentos(raramente isso acontece), então é bom conhecer o que fazer quando ocorre essa situação, pois não queremos danificar o nosso sistema.&lt;/p&gt;

&lt;h2 id=&quot;desligando-o-computador&quot;&gt;Desligando o computador&lt;/h2&gt;

&lt;p&gt;A primeira combinação de emergência é usada para sincronizar os discos e desligar o computador instantaneamente, evitando problemas nos sistemas de arquivos. Ela é ideal para quem precisa desligar o computador rapidamente sem danificar seus sistemas de arquivos, ou quando a máquina trava e por qualquer motivo não permite um desligamento natural através do init.&lt;/p&gt;

&lt;p&gt;Mantenha &lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Print Screen&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;o&lt;/kbd&gt;&lt;/p&gt;

&lt;h2 id=&quot;reiniciando-o-computador&quot;&gt;Reiniciando o computador&lt;/h2&gt;

&lt;p&gt;Assim como o Ctrl+Alt+Del do MS-DOS o kernel do Linux também possui uma chamada de emergência que permite reiniciar a máquina, com a vantagem de sincronizar os discos evitando danos no sistema de arquivos.&lt;/p&gt;

&lt;p&gt;Mantenha &lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Print Screen&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;b&lt;/kbd&gt;&lt;/p&gt;

&lt;h2 id=&quot;sincronizando-os-discos&quot;&gt;Sincronizando os discos&lt;/h2&gt;

&lt;p&gt;Se você acha que a força vai cair e precisa trabalhar até a ultima hora mas tem medo de danificar seu sistema de arquivo, poderá sincronizar seus discos de tempos em tempos. Para sincronizar discos em caso de emergência.&lt;/p&gt;

&lt;p&gt;Mantenha &lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Print Screen&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;s&lt;/kbd&gt;&lt;/p&gt;

&lt;h2 id=&quot;segurança&quot;&gt;Segurança&lt;/h2&gt;

&lt;p&gt;Se por algum motivo algo está ameaçando a segurança do seu sistema, como a execução acidental de um script malicioso como root ou de programa desconhecido, poderá colocar os discos como somente leitura e evitar danos mais sérios.&lt;/p&gt;

&lt;p&gt;Mantenha &lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Print Screen&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;u&lt;/kbd&gt;&lt;/p&gt;</content><author><name>Allythy</name></author><summary type="html">Neste artigo vamos aprender algumas teclas de emergência do GNU/Linux. Sabemos que os sistemas GNU/Linux não estão a salvo de travamentos(raramente isso acontece), então é bom conhecer o que fazer quando ocorre essa situação, pois não queremos danificar o nosso sistema.</summary></entry><entry><title type="html">Como fazer cálculo de sub-redes no terminal</title><link href="http://localhost:4000/Como-fazer-calculos-de-sub-rede-no-terminal" rel="alternate" type="text/html" title="Como fazer cálculo de sub-redes no terminal" /><published>2017-06-03T16:00:00-03:00</published><updated>2017-06-03T16:00:00-03:00</updated><id>http://localhost:4000/Como-fazer-calculos-de-sub-rede-no-terminal</id><content type="html" xml:base="http://localhost:4000/Como-fazer-calculos-de-sub-rede-no-terminal">&lt;p&gt;Neste artigo, vamos aprender a fazer cálculo de sub-rede no terminal. Hoje eu estava estudando para prova de Redes que eu tenho amanhã, só que eu não tinha como conferir se as respostas estavam corretas, então fui pesquisar algum programa (apt-cache search ) achei ipcalc um programa de linha de comando que mostra o endereço de rede, primeiro host, ultimo host, máscara de rede, endereço de broadcast e faz cálculos de sub-rede para uma determinada quantidade de host. O ipcalc  mostrar todas essas informações tanto em decimal como em binário, mas o ipcalc só é valido para o Ipv4.  A  instalação é bem simples, digite esse comando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt install ipcalc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Para  verificar  o endereço de rede, primeiro host, ultimo host, máscara de rede, endereço de broadcast de um determinado IP, use esse comando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ipcalc 192.168.0.0/24
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Para verificar o endereço IP para uma sub-rede com 40 host outra com 25 host e outra com 12 host&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ipcalc 192.100.40.0/24 -s 40 25 12
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Para fazer 8 sub-redes para um endereço IP de classe C&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ipcalc 192.168.0.0/24 27
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name>Allythy</name></author><summary type="html">Neste artigo, vamos aprender a fazer cálculo de sub-rede no terminal. Hoje eu estava estudando para prova de Redes que eu tenho amanhã, só que eu não tinha como conferir se as respostas estavam corretas, então fui pesquisar algum programa (apt-cache search ) achei ipcalc um programa de linha de comando que mostra o endereço de rede, primeiro host, ultimo host, máscara de rede, endereço de broadcast e faz cálculos de sub-rede para uma determinada quantidade de host. O ipcalc mostrar todas essas informações tanto em decimal como em binário, mas o ipcalc só é valido para o Ipv4. A instalação é bem simples, digite esse comando:</summary></entry><entry><title type="html">Como instalar programas pelo código fonte no GNU/Linux</title><link href="http://localhost:4000/Como-instalar-programas-pelo-codigo-fonte-no-gnu-linux" rel="alternate" type="text/html" title="Como instalar programas pelo código fonte no GNU/Linux" /><published>2017-05-29T16:00:00-03:00</published><updated>2017-05-29T16:00:00-03:00</updated><id>http://localhost:4000/Como-instalar-programas-pelo-codigo-fonte-no-gnu-linux</id><content type="html" xml:base="http://localhost:4000/Como-instalar-programas-pelo-codigo-fonte-no-gnu-linux">&lt;p&gt;Neste artigo, vamos aprender como instalar programas pelo código fonte, isso pode parecer uma tarefa bem complicada, mas não é. Na maioria das vezes usamos ferramentas para instalar os programas sem necessidade de compilar ou corrigir dependências, como o apt-get, aptitude, yum ou pacman eles fazem isso tudo para gente. Mas existem alguns programas que vêm apenas com o código fonte, então temos que compilar, que é transformar o “texto” (linguagem de programação) em arquivos binários, pois é essa linguagem que o computador entende.&lt;/p&gt;

&lt;p&gt;Primeiro,temos que baixar o pacote &lt;code class=&quot;highlighter-rouge&quot;&gt;build-essential&lt;/code&gt; que contém as ferramentas necessárias para compilação.
No Debian e derivados, devemos executar o comando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt install build-essential
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Feito isso, agora temos que descompactar o arquivo que contém o código fonte, na maioria das vezes o código fonte vem compactados em gzip ou bzip2. Caso você queira saber mais sobre esse compactadores &lt;a href=&quot;https://allythy.github.io/Empacotamento-e-compactacao-de-arquivos-no-gnu-linux&quot; target=&quot;_ blank&quot;&gt;leia esse artigo &lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tar -xvzf pacote.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Entre no diretório que foi descompactado.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /pacote
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Dentro do diretório descompactado, é sempre recomendado ler os arquivos &lt;strong&gt;readme&lt;/strong&gt; e &lt;strong&gt;install&lt;/strong&gt; antes. Agora temos que executar um script, que na maioria da vezes vem como o nome &lt;code class=&quot;highlighter-rouge&quot;&gt;configure&lt;/code&gt;. Esse script verifica no sistema se existem todas as dependências necessárias para a compilação do programa, se for concluído com sucesso, irá gerar o arquivo &lt;strong&gt;Makefile&lt;/strong&gt; que contém as informações para compilação. Para executar o script basta usar esse comando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./configure
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Para compilar, usamos o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;make&lt;/code&gt;, que vai ler o arquivo Makefile com as instruções de compilação e executar cada etapa. Isso pode demorar um pouco dependendo do software e do seu computador.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;make
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Depois que o programa foi compilado, usamos o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;make install&lt;/code&gt; que vai mover os arquivos que foram compilados para os seus devidos lugares, assim concluindo a instalação. Lembrando que esse comando tem que ser executado com a permissão de super usuário (root).&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Uma dica, depois da instalação use o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;make clean&lt;/code&gt;, ele vai apagar os arquivos temporários que foram gerados durante a instalação.&lt;/p&gt;

&lt;h2 id=&quot;desinstalação&quot;&gt;Desinstalação&lt;/h2&gt;
&lt;p&gt;Para desinstalar um programa que foi instalado pelo código fonte também é muito simples, primeiros temos que entrar  diretório onde foi descompactado o programa.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /pacote
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Feito isso, é só digitar o seguinte comando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo make uninstall
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Se por algum motivo essa opção não deu certo, não se preocupe você pode usar o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;whereis&lt;/code&gt; que retorna a localização os binários, código fonte e manuais dos programas.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;whereis nome-do-pacote
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Sabendo o caminho onde os arquivos foram instalados é só removê-los com o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;rm -r&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo rm -r caminho-do-pacote
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Como você pode ver não tem nada de complicado em instalar programas pelo código fonte, basicamente são três comandos :&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./configure
make
sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Espero que tenha sanado suas dúvidas sobre esse assunto.&lt;/p&gt;</content><author><name>Allythy</name></author><summary type="html">Neste artigo, vamos aprender como instalar programas pelo código fonte, isso pode parecer uma tarefa bem complicada, mas não é. Na maioria das vezes usamos ferramentas para instalar os programas sem necessidade de compilar ou corrigir dependências, como o apt-get, aptitude, yum ou pacman eles fazem isso tudo para gente. Mas existem alguns programas que vêm apenas com o código fonte, então temos que compilar, que é transformar o “texto” (linguagem de programação) em arquivos binários, pois é essa linguagem que o computador entende.</summary></entry><entry><title type="html">Como instalar o Jekyll no Debian e derivados</title><link href="http://localhost:4000/Como-instalar-o-Jekyll-no-Debian-e-derivados" rel="alternate" type="text/html" title="Como instalar o Jekyll no Debian e derivados " /><published>2017-05-07T11:00:00-03:00</published><updated>2017-05-07T11:00:00-03:00</updated><id>http://localhost:4000/Como-instalar-o-Jekyll-no-Debian-e-derivados</id><content type="html" xml:base="http://localhost:4000/Como-instalar-o-Jekyll-no-Debian-e-derivados">&lt;p&gt;Neste artigo, vamos aprender como instalar o Jekyll no Debian e derivados. O Jekyll é um gerador de site estáticos, seja ele um blog, site institucional ou o que você queira criar. O jekyll utiliza o &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt;, e  para guardar e organizar informações, ele usa o Front Matter e o &lt;a href=&quot;https://github.com/Shopify/liquid/wiki&quot;&gt;Liquid&lt;/a&gt; como renderizador. Outra coisa muito interessante do Jekyll que você pode fazer os seus post usando &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; e hospedar o seu site no &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;como-instalar-o-jekyll&quot;&gt;Como Instalar o Jekyll?&lt;/h2&gt;

&lt;p&gt;Primeiro temos que instalar o pacote build-essential, pois vamos precisar do gcc e do make. Para isso,  use esse comando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt install build-essential
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Também temos que instalar a versão 2.0 do ruby ou superior.  Para isso, use esse comando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt install ruby2.3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Cerifique-se que também foi instalado o pacote ruby-dev, caso não tenho sido instalado, use esse comando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt install ruby2.3-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Agora temos que baixar o RubyGems, que é um gerenciador de pacotes para o Ruby. Você pode &lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;acessar o site e baixar&lt;/a&gt; ou usar esse comando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget -c https://rubygems.org/rubygems/rubygems-2.6.11.tgz
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Vamos descompactar. Caso você queira saber mais sobre o descompactadores &lt;a href=&quot;https://allythy.github.io/Empacotamento-e-compactacao-de-arquivos-no-gnu-linux&quot;&gt;tem esse artigo&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tar -xvzf rubygems-2.6.11.tgz
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Temos que entrar na pasta que descompactar e depois instalar o RubyGems, para isso use esses comandos:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;rubygems-2.6.11/
sudo ruby setup.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Pronto, agora é só instalar o jekyll com esse comando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo gem install jekyll bundler
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Você pode verificar se ele foi instalado com esse comando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll -v
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Pronto, você tá com Jekyll instalado. Para criar o seu site digite esse comando, onde tem o nomeSempreUpdate coloque o nome que você vai dar para o seu site.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo jekyll new allythy
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Esse comando vai gerar uma pasta com o nome que você deu para o seu site, entre nessa pasta e execute esse comando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo jekyll s
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Esse comando vai executar o seu site localmente na porta 4000. Agora é só você acessar o endereço http://127.0.0.1:4000/ e começar a testar.&lt;/p&gt;</content><author><name>Allythy</name></author><summary type="html">Neste artigo, vamos aprender como instalar o Jekyll no Debian e derivados. O Jekyll é um gerador de site estáticos, seja ele um blog, site institucional ou o que você queira criar. O jekyll utiliza o YAML, e para guardar e organizar informações, ele usa o Front Matter e o Liquid como renderizador. Outra coisa muito interessante do Jekyll que você pode fazer os seus post usando Markdown e hospedar o seu site no GitHub.</summary></entry><entry><title type="html">Empacotamento e Compactação de arquivos no GNU/Linux</title><link href="http://localhost:4000/Empacotamento-e-compactacao-de-arquivos-no-gnu-linux" rel="alternate" type="text/html" title="Empacotamento e Compactação de arquivos no GNU/Linux" /><published>2017-04-30T12:00:00-03:00</published><updated>2017-04-30T12:00:00-03:00</updated><id>http://localhost:4000/Empacotamento-e-compactacao-de-arquivos-no-gnu-linux</id><content type="html" xml:base="http://localhost:4000/Empacotamento-e-compactacao-de-arquivos-no-gnu-linux">&lt;p&gt;Nesse artigo, vamos aprender sobre empacotamento e compactação de arquivos. Para o empacotamento de arquivos utilizamos o comando tar, é válido ressaltar que o empacotamento não diminui o tamanho do arquivo, ele faz a junção de um ou mais arquivos em um único arquivo, quem diminui o tamanho são os compactadores, que são GNU gzip (gzip) ou bzip2. Primeiro vamos entender a sintaxe do comando tar.&lt;/p&gt;

&lt;h3 id=&quot;sintaxe&quot;&gt;Sintaxe&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tar &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;opções] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;nome &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;novo arquivo] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;arquivo de origem]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Vejamos alguma opções do comando tar:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Cria um novo arquivo tar
t &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Exibe o conteúdo de um arquivo tar
p &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Mantém as permissões originais dos arquivos
r &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Adiciona arquivos a um arquivo tar existente
f &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Permite especificar o arquivo tar que vai ser usado, por causa disso é a ultima opção
v &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Exibe detalhes da operação
x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Extrai arquivos de uma arquivo tar existente
C &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; especifica o diretório dos arquivos a serem armazenados
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id=&quot;usando-o-comando-tar&quot;&gt;Usando o comando tar&lt;/h2&gt;

&lt;p&gt;Primeiro vamos aprender a usar o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;tar&lt;/code&gt; para o empacotamento de arquivos e extração mais adiante usaremos os compactadores, que não tem nada de difícil.&lt;/p&gt;

&lt;p&gt;Criando um arquivo .tar&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tar -cvf artigos.tar telgram.odt mycroft.odt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Exibindo o conteúdo de um arquivo .tar&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tar -tf artigos.tar
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Extraindo um arquivo .tar&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tar -xvf artigos.tar
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Adicionar um arquivo ao arquivo já empacotado&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tar -rf artigos.tar mozilla.odt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Excluindo um arquivo do arquivo.tar&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tar -f artigos.tar –-delete mozilla.odt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id=&quot;usando-os-compactadores&quot;&gt;Usando os compactadores&lt;/h2&gt;

&lt;p&gt;Agora que já sabemos usar o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;tar&lt;/code&gt; para o empacotamento de arquivos, vai ser bem fácil aprender a comprimir arquivos. Primeiros vamos aprender a compactar com o gzip, para  isso temos que acrescentar uma opção ao comando tar que é &lt;code class=&quot;highlighter-rouge&quot;&gt;-z&lt;/code&gt;, essa opção indica que os arquivos serão compactados em &lt;strong&gt;gzip&lt;/strong&gt;, que resultará em um arquivo com extensão &lt;strong&gt;.tar.gz&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Criando um arquivo compactado com gzip&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tar -cvzf artigos.tar.gz telgram.odt mycroft.odt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Extraindo arquivos com gzip&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tar -xvzf artigos.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Quando for comprimir arquivos usando o &lt;strong&gt;bzip2&lt;/strong&gt;, só acrescentar o parâmetro &lt;code class=&quot;highlighter-rouge&quot;&gt;-j&lt;/code&gt;, essa opção indica que os arquivos serão compactados em bzip2, que resultara um arquivo com a extensão &lt;strong&gt;.tar.bz2&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Criando um arquivo compactado com bzip2&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tar -cvjf artigos.tar.bz2 telgram.odt mycroft.odt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Extraindo arquivos com bzip2&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tar -xvjf artigos.tar.bz2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name>Allythy</name></author><summary type="html">Nesse artigo, vamos aprender sobre empacotamento e compactação de arquivos. Para o empacotamento de arquivos utilizamos o comando tar, é válido ressaltar que o empacotamento não diminui o tamanho do arquivo, ele faz a junção de um ou mais arquivos em um único arquivo, quem diminui o tamanho são os compactadores, que são GNU gzip (gzip) ou bzip2. Primeiro vamos entender a sintaxe do comando tar.</summary></entry><entry><title type="html">Entendendo as permissões de acesso a arquivos e repositórios e como alterá-las</title><link href="http://localhost:4000/Entendendo-as-permissoes-de-acesso-a-arquivos-e-repositorios-e-como-altera-las" rel="alternate" type="text/html" title="Entendendo as permissões de acesso a arquivos e repositórios e como alterá-las" /><published>2017-04-29T12:00:00-03:00</published><updated>2017-04-29T12:00:00-03:00</updated><id>http://localhost:4000/Entendendo-as-permissoes-de-acesso-a-arquivos-e-repositorios-e-como-altera-las</id><content type="html" xml:base="http://localhost:4000/Entendendo-as-permissoes-de-acesso-a-arquivos-e-repositorios-e-como-altera-las">&lt;p&gt;Neste artigo, vamos entendendo as permissões de acesso a arquivos e repositórios e como alterá-las. Para um Administrador de Sistema é primordial entender as permissões de acesso a arquivos e repositórios e como alterá-las. Isso não se restringe apenas aos Administradores de Sistemas, também é necessário para usuários domésticos, pois algumas vezes temos que alterar a permissão de um arquivo.&lt;/p&gt;

&lt;p&gt;Para ver as permissões que um arquivo ou diretório possui, temos que executar o seguinte comando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls -l
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;O comando &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; lista o conteúdo do diretório, no meu caso é o diretório home e a opção -l trás as informações em um formato longo mostrando as permissões, número e links, proprietário, grupo, tamanho, data de modificação e nome do arquivo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;img/permissao.png&quot; alt=&quot;nformações da minha pasta de Documentos&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vamos entender o que cada coluna se trata, primeiro vamos começar pela coluna das permissões, para entender o que cada letra significa.&lt;/p&gt;

&lt;h2 id=&quot;conhecendo-as-permissões&quot;&gt;Conhecendo as Permissões&lt;/h2&gt;

&lt;p&gt;A primeira letra trata da natureza do arquivo, se ele é um diretório, link, arquivo comum de usuário, arquivo de bloco, Socket de comunicação entre processos, Pipe de comunicação entre processos ou arquivo de caractere.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;d = Diretório
- = Arquivo comum de usuário
b = Arquivo de bloco
c = Arquivo de caractere
l = Link
s = Socket de comunicação entre processos
p = Pipe de comunicação entre processos
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Depois temos as letras &lt;strong&gt;rwx&lt;/strong&gt; (que sempre apareceram nessa ordem) que estão divididas em três categorias, dono, grupo e outros. Onde cada letra determina o acesso a um diretório ou arquivo, ao dono, grupo e outros. As letras rwx significam:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;r = Permissão de Leitura (read)
w =  Permissão de Escrita (write)
x = Permissão de Execução (execution)
- = Sem Permissão
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;img/permissao2.png&quot; alt=&quot;Permissões do arquivos&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As outras colunas são mais fácies de entende, porque elas são autoexplicativas. A coluna do link, mostra a quantidade de link que esse arquivo ou diretório possui. Na Coluna do Proprietário, a pessoa que criou o arquivou ou diretório (dono), nesse caso é allythy. A Coluna do Grupo, o grupo ao qual pertence o arquivo ou diretório, nesse caso o grupo é allythy. A coluna Date e Hora, mostra a última vez que o arquivo foi alterado. E por fim, a última coluna que diz o nome do arquivo.&lt;/p&gt;

&lt;h2 id=&quot;vamos-aprender-a-alterar-essas-permissões&quot;&gt;Vamos aprender a alterar essas permissões&lt;/h2&gt;

&lt;p&gt;Para alterar essas permissões em arquivos ou diretório, vamos utilizar o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;chmod&lt;/code&gt; em modo octal, pois é mais fácil para o entendimento.&lt;/p&gt;

&lt;p&gt;A sintaxe do comando é essa :&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chmod &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;opções] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;permissões] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;nome &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;arquivo ou diretório]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;img/permissao3.png&quot; alt=&quot;Tabela com os números para alterar as permissões em octal&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Os valores que são necessário para você conhecer é: &lt;strong&gt;4 (leitura) 2 (escrita) 1 (execução)&lt;/strong&gt;. Porque a soma deles dão as outras permissões, exemplo: leitura e execução, 4 + 1 = 5. Lembrando, caso não queira conceder nenhuma permissão utilize 0 (zero).&lt;/p&gt;

&lt;p&gt;Ao fornecer novas permissões aos arquivos, utilize um dígito para o dono, grupo e os outros. Por exemplo, para conceder todas as permissões ao dono, porém nenhuma permissão para leitura, escrita ou execução de um arquivo ao grupo e outros, vamos fazer assim:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chmod 700 Documentos
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;OBS: A opção menos -R (recursiva) faz com que as alterações sejam aplicadas aos subdiretórios.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;alterar-proprietário-e-grupo-dos-arquivos-e-diretórios&quot;&gt;Alterar proprietário e grupo dos arquivos e diretórios&lt;/h2&gt;

&lt;p&gt;Para alterar o proprietário e grupo de um arquivo ou diretório, vamos usar o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;chown&lt;/code&gt;. Que possui a seguinte sintaxe:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chown &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;novo proprietário]:[ novo grupo] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;nome &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;arquivo ou diretório]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Só alterar o proprietário e manter o grupo&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Não coloque os colchetes quanto for digitar o comando.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chown &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;novo proprietário] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;nome &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;arquivo]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Alterar o proprietário e o grupo&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Não deixe espaço entre os dois pontos. Na versão GNU você pode usar o ponto ao invés dos dois pontos&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chown &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;novo proprietário]:[ novo grupo] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;nome &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;arquivo ou diretório]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Alterar só o grupo&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Se os dois pontos ou ponto e grupo são fornecidos, mas o  nome
do  usuário  é  omitido, somente o grupo do arquivo é alterado. Neste
caso, chown assume a mesma função que &lt;code class=&quot;highlighter-rouge&quot;&gt;chgrp&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chown &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;deixa vazio &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;:[ novo grupo] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;nome &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;arquivo ou diretório]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Se você colocar os dois pontos ou ponto sem o nome de grupo só com o nome do usuário, aquele  usuário
torna-se o proprietário do arquivo e o grupo do arquivo é alterado para o grupo de login do usuário.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chown &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;novo proprietário]:[deixa vazio &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;nome &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;arquivo ou diretório]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Lembrando que da forma como foi executado o comando acima, ele alterou somente do diretório ou arquivo, mas  as sub-pastas dentro dele continuam com o proprietário antigo. Para incluir os sub-diretórios acrescente -R de recursiva.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chown -R &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;novo proprietário]:[ novo grupo] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;nome &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;arquivo ou diretório]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name>Allythy</name></author><summary type="html">Neste artigo, vamos entendendo as permissões de acesso a arquivos e repositórios e como alterá-las. Para um Administrador de Sistema é primordial entender as permissões de acesso a arquivos e repositórios e como alterá-las. Isso não se restringe apenas aos Administradores de Sistemas, também é necessário para usuários domésticos, pois algumas vezes temos que alterar a permissão de um arquivo.</summary></entry></feed>